/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|*Assembly Writer Source Fragment                                             *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

/// printInstruction - This method is automatically generated by tablegen
/// from the instruction set description.
void SystemZInstPrinter::printInstruction(const MCInst *MI, raw_ostream &O) {
  static const uint32_t OpInfo[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    3996U,	// DBG_VALUE
    0U,	// REG_SEQUENCE
    0U,	// COPY
    3989U,	// BUNDLE
    4006U,	// LIFETIME_START
    3976U,	// LIFETIME_END
    0U,	// STACKMAP
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// STATEPOINT
    0U,	// FRAME_ALLOC
    4099U,	// A
    4165U,	// ADB
    531305U,	// ADBR
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    0U,	// ADJDYNALLOC
    4210U,	// AEB
    531424U,	// AEBR
    0U,	// AEXT128_64
    1054613U,	// AFI
    0U,	// AFIMux
    5211U,	// AG
    5084U,	// AGF
    1054623U,	// AGFI
    531834U,	// AGFR
    1578985U,	// AGHI
    18880680U,	// AGHIK
    531910U,	// AGR
    85989585U,	// AGRK
    2631729U,	// AGSI
    5415U,	// AH
    1578975U,	// AHI
    18880674U,	// AHIK
    0U,	// AHIMux
    0U,	// AHIMuxK
    7967U,	// AHY
    1054105U,	// AIH
    6431U,	// AL
    4276U,	// ALC
    5255U,	// ALCG
    531922U,	// ALCGR
    531749U,	// ALCR
    3151815U,	// ALFI
    5288U,	// ALG
    5094U,	// ALGF
    3151787U,	// ALGFI
    531847U,	// ALGFR
    18880687U,	// ALGHSIK
    531942U,	// ALGR
    85989591U,	// ALGRK
    18880696U,	// ALHSIK
    532058U,	// ALR
    85989629U,	// ALRK
    8025U,	// ALY
    531300U,	// AR
    85989580U,	// ARK
    2631724U,	// ASI
    0U,	// ATOMIC_CMP_SWAPW
    0U,	// ATOMIC_LOADW_AFI
    0U,	// ATOMIC_LOADW_AR
    0U,	// ATOMIC_LOADW_MAX
    0U,	// ATOMIC_LOADW_MIN
    0U,	// ATOMIC_LOADW_NILH
    0U,	// ATOMIC_LOADW_NILHi
    0U,	// ATOMIC_LOADW_NR
    0U,	// ATOMIC_LOADW_NRi
    0U,	// ATOMIC_LOADW_OILH
    0U,	// ATOMIC_LOADW_OR
    0U,	// ATOMIC_LOADW_SR
    0U,	// ATOMIC_LOADW_UMAX
    0U,	// ATOMIC_LOADW_UMIN
    0U,	// ATOMIC_LOADW_XILF
    0U,	// ATOMIC_LOADW_XR
    0U,	// ATOMIC_LOAD_AFI
    0U,	// ATOMIC_LOAD_AGFI
    0U,	// ATOMIC_LOAD_AGHI
    0U,	// ATOMIC_LOAD_AGR
    0U,	// ATOMIC_LOAD_AHI
    0U,	// ATOMIC_LOAD_AR
    0U,	// ATOMIC_LOAD_MAX_32
    0U,	// ATOMIC_LOAD_MAX_64
    0U,	// ATOMIC_LOAD_MIN_32
    0U,	// ATOMIC_LOAD_MIN_64
    0U,	// ATOMIC_LOAD_NGR
    0U,	// ATOMIC_LOAD_NGRi
    0U,	// ATOMIC_LOAD_NIHF64
    0U,	// ATOMIC_LOAD_NIHF64i
    0U,	// ATOMIC_LOAD_NIHH64
    0U,	// ATOMIC_LOAD_NIHH64i
    0U,	// ATOMIC_LOAD_NIHL64
    0U,	// ATOMIC_LOAD_NIHL64i
    0U,	// ATOMIC_LOAD_NILF
    0U,	// ATOMIC_LOAD_NILF64
    0U,	// ATOMIC_LOAD_NILF64i
    0U,	// ATOMIC_LOAD_NILFi
    0U,	// ATOMIC_LOAD_NILH
    0U,	// ATOMIC_LOAD_NILH64
    0U,	// ATOMIC_LOAD_NILH64i
    0U,	// ATOMIC_LOAD_NILHi
    0U,	// ATOMIC_LOAD_NILL
    0U,	// ATOMIC_LOAD_NILL64
    0U,	// ATOMIC_LOAD_NILL64i
    0U,	// ATOMIC_LOAD_NILLi
    0U,	// ATOMIC_LOAD_NR
    0U,	// ATOMIC_LOAD_NRi
    0U,	// ATOMIC_LOAD_OGR
    0U,	// ATOMIC_LOAD_OIHF64
    0U,	// ATOMIC_LOAD_OIHH64
    0U,	// ATOMIC_LOAD_OIHL64
    0U,	// ATOMIC_LOAD_OILF
    0U,	// ATOMIC_LOAD_OILF64
    0U,	// ATOMIC_LOAD_OILH
    0U,	// ATOMIC_LOAD_OILH64
    0U,	// ATOMIC_LOAD_OILL
    0U,	// ATOMIC_LOAD_OILL64
    0U,	// ATOMIC_LOAD_OR
    0U,	// ATOMIC_LOAD_SGR
    0U,	// ATOMIC_LOAD_SR
    0U,	// ATOMIC_LOAD_UMAX_32
    0U,	// ATOMIC_LOAD_UMAX_64
    0U,	// ATOMIC_LOAD_UMIN_32
    0U,	// ATOMIC_LOAD_UMIN_64
    0U,	// ATOMIC_LOAD_XGR
    0U,	// ATOMIC_LOAD_XIHF64
    0U,	// ATOMIC_LOAD_XILF
    0U,	// ATOMIC_LOAD_XILF64
    0U,	// ATOMIC_LOAD_XR
    0U,	// ATOMIC_SWAPW
    0U,	// ATOMIC_SWAP_32
    0U,	// ATOMIC_SWAP_64
    531633U,	// AXBR
    7930U,	// AY
    3751193U,	// AsmBCR
    143575U,	// AsmBRC
    145712U,	// AsmBRCL
    37754993U,	// AsmCGIJ
    153098377U,	// AsmCGRJ
    37754988U,	// AsmCIJ
    38279287U,	// AsmCLGIJ
    153098383U,	// AsmCLGRJ
    38279294U,	// AsmCLIJ
    153098390U,	// AsmCLRJ
    153098372U,	// AsmCRJ
    204111U,	// AsmEBR
    16926U,	// AsmEJ
    16666U,	// AsmEJG
    5247230U,	// AsmELOC
    5247243U,	// AsmELOCG
    529359U,	// AsmELOCGR
    529352U,	// AsmELOCR
    5771524U,	// AsmESTOC
    5771538U,	// AsmESTOCG
    204341U,	// AsmHBR
    204116U,	// AsmHEBR
    16711U,	// AsmHEJ
    16703U,	// AsmHEJG
    5247263U,	// AsmHELOC
    5247278U,	// AsmHELOCG
    528915U,	// AsmHELOCGR
    528907U,	// AsmHELOCR
    5771558U,	// AsmHESTOC
    5771574U,	// AsmHESTOCG
    17835U,	// AsmHJ
    17763U,	// AsmHJG
    5248310U,	// AsmHLOC
    5248340U,	// AsmHLOCG
    530308U,	// AsmHLOCGR
    530301U,	// AsmHLOCR
    5772604U,	// AsmHSTOC
    5772635U,	// AsmHSTOCG
    54531742U,	// AsmJEAltCGI
    220206786U,	// AsmJEAltCGR
    54531734U,	// AsmJEAltCI
    55056039U,	// AsmJEAltCLGI
    220206795U,	// AsmJEAltCLGR
    55056049U,	// AsmJEAltCLI
    220206805U,	// AsmJEAltCLR
    220206778U,	// AsmJEAltCR
    54530594U,	// AsmJECGI
    220205630U,	// AsmJECGR
    54530588U,	// AsmJECI
    55054889U,	// AsmJECLGI
    220205637U,	// AsmJECLGR
    55054897U,	// AsmJECLI
    220205645U,	// AsmJECLR
    220205624U,	// AsmJECR
    54530797U,	// AsmJHAltCGI
    220205841U,	// AsmJHAltCGR
    54530789U,	// AsmJHAltCI
    55055094U,	// AsmJHAltCLGI
    220205850U,	// AsmJHAltCLGR
    55055104U,	// AsmJHAltCLI
    220205860U,	// AsmJHAltCLR
    220205833U,	// AsmJHAltCR
    54531503U,	// AsmJHCGI
    220206539U,	// AsmJHCGR
    54531497U,	// AsmJHCI
    55055798U,	// AsmJHCLGI
    220206546U,	// AsmJHCLGR
    55055806U,	// AsmJHCLI
    220206554U,	// AsmJHCLR
    220206533U,	// AsmJHCR
    54532603U,	// AsmJHEAltCGI
    220207643U,	// AsmJHEAltCGR
    54532596U,	// AsmJHEAltCI
    55056899U,	// AsmJHEAltCLGI
    220207651U,	// AsmJHEAltCLGR
    55056908U,	// AsmJHEAltCLI
    220207660U,	// AsmJHEAltCLR
    220207636U,	// AsmJHEAltCR
    54530380U,	// AsmJHECGI
    220205420U,	// AsmJHECGR
    54530373U,	// AsmJHECI
    55054676U,	// AsmJHECLGI
    220205428U,	// AsmJHECLGR
    55054685U,	// AsmJHECLI
    220205437U,	// AsmJHECLR
    220205413U,	// AsmJHECR
    54530488U,	// AsmJLAltCGI
    220205532U,	// AsmJLAltCGR
    54530480U,	// AsmJLAltCI
    55054785U,	// AsmJLAltCLGI
    220205541U,	// AsmJLAltCLGR
    55054795U,	// AsmJLAltCLI
    220205551U,	// AsmJLAltCLR
    220205524U,	// AsmJLAltCR
    54532467U,	// AsmJLCGI
    220207503U,	// AsmJLCGR
    54532461U,	// AsmJLCI
    55056762U,	// AsmJLCLGI
    220207510U,	// AsmJLCLGR
    55056770U,	// AsmJLCLI
    220207518U,	// AsmJLCLR
    220207497U,	// AsmJLCR
    54531891U,	// AsmJLEAltCGI
    220206931U,	// AsmJLEAltCGR
    54531884U,	// AsmJLEAltCI
    55056187U,	// AsmJLEAltCLGI
    220206939U,	// AsmJLEAltCLGR
    55056196U,	// AsmJLEAltCLI
    220206948U,	// AsmJLEAltCLR
    220206924U,	// AsmJLEAltCR
    54530689U,	// AsmJLECGI
    220205729U,	// AsmJLECGR
    54530682U,	// AsmJLECI
    55054985U,	// AsmJLECLGI
    220205737U,	// AsmJLECLGR
    55054994U,	// AsmJLECLI
    220205746U,	// AsmJLECLR
    220205722U,	// AsmJLECR
    54530942U,	// AsmJLHAltCGI
    220205982U,	// AsmJLHAltCGR
    54530935U,	// AsmJLHAltCI
    55055238U,	// AsmJLHAltCLGI
    220205990U,	// AsmJLHAltCLGR
    55055247U,	// AsmJLHAltCLI
    220205999U,	// AsmJLHAltCLR
    220205975U,	// AsmJLHAltCR
    54531623U,	// AsmJLHCGI
    220206663U,	// AsmJLHCGR
    54531616U,	// AsmJLHCI
    55055919U,	// AsmJLHCLGI
    220206671U,	// AsmJLHCLGR
    55055928U,	// AsmJLHCLI
    220206680U,	// AsmJLHCLR
    220206656U,	// AsmJLHCR
    204383U,	// AsmLBR
    204129U,	// AsmLEBR
    17020U,	// AsmLEJ
    17012U,	// AsmLEJG
    5247572U,	// AsmLELOC
    5247587U,	// AsmLELOCG
    529224U,	// AsmLELOCGR
    529216U,	// AsmLELOCR
    5771867U,	// AsmLESTOC
    5771883U,	// AsmLESTOCG
    204353U,	// AsmLHBR
    17954U,	// AsmLHJ
    17921U,	// AsmLHJG
    5248481U,	// AsmLHLOC
    5248496U,	// AsmLHLOCG
    530169U,	// AsmLHLOCGR
    530161U,	// AsmLHLOCR
    5772776U,	// AsmLHSTOC
    5772792U,	// AsmLHSTOCG
    18799U,	// AsmLJ
    18761U,	// AsmLJG
    5249315U,	// AsmLLOC
    5249338U,	// AsmLLOCG
    531056U,	// AsmLLOCGR
    531019U,	// AsmLLOCR
    290459852U,	// AsmLOC
    290460813U,	// AsmLOCG
    352853465U,	// AsmLOCGR
    352853297U,	// AsmLOCR
    5773609U,	// AsmLSTOC
    5773633U,	// AsmLSTOCG
    204142U,	// AsmNEBR
    17273U,	// AsmNEJ
    17265U,	// AsmNEJG
    5247825U,	// AsmNELOC
    5247840U,	// AsmNELOCG
    529343U,	// AsmNELOCGR
    529335U,	// AsmNELOCR
    5772120U,	// AsmNESTOC
    5772136U,	// AsmNESTOCG
    204372U,	// AsmNHBR
    204122U,	// AsmNHEBR
    16818U,	// AsmNHEJ
    16809U,	// AsmNHEJG
    5247365U,	// AsmNHELOC
    5247382U,	// AsmNHELOCG
    528897U,	// AsmNHELOCGR
    528888U,	// AsmNHELOCR
    5771661U,	// AsmNHESTOC
    5771679U,	// AsmNHESTOCG
    18222U,	// AsmNHJ
    18214U,	// AsmNHJG
    5248774U,	// AsmNHLOC
    5248789U,	// AsmNHLOCG
    530292U,	// AsmNHLOCGR
    530284U,	// AsmNHLOCR
    5773069U,	// AsmNHSTOC
    5773085U,	// AsmNHSTOCG
    204398U,	// AsmNLBR
    204135U,	// AsmNLEBR
    17127U,	// AsmNLEJ
    17118U,	// AsmNLEJG
    5247674U,	// AsmNLELOC
    5247691U,	// AsmNLELOCG
    529206U,	// AsmNLELOCGR
    529197U,	// AsmNLELOCR
    5771970U,	// AsmNLESTOC
    5771988U,	// AsmNLESTOCG
    204365U,	// AsmNLHBR
    18072U,	// AsmNLHJ
    18063U,	// AsmNLHJG
    5248619U,	// AsmNLHLOC
    5248636U,	// AsmNLHLOCG
    530151U,	// AsmNLHLOCGR
    530142U,	// AsmNLHLOCR
    5772915U,	// AsmNLHSTOC
    5772933U,	// AsmNLHSTOCG
    18934U,	// AsmNLJ
    18926U,	// AsmNLJG
    5249486U,	// AsmNLLOC
    5249501U,	// AsmNLLOCG
    531004U,	// AsmNLLOCGR
    530996U,	// AsmNLLOCR
    5773781U,	// AsmNLSTOC
    5773797U,	// AsmNLSTOCG
    204419U,	// AsmNOBR
    19262U,	// AsmNOJ
    19256U,	// AsmNOJG
    5249816U,	// AsmNOLOC
    5249831U,	// AsmNOLOCG
    531275U,	// AsmNOLOCGR
    531267U,	// AsmNOLOCR
    5774111U,	// AsmNOSTOC
    5774127U,	// AsmNOSTOCG
    204414U,	// AsmOBR
    19220U,	// AsmOJ
    19215U,	// AsmOJG
    5249779U,	// AsmOLOC
    5249792U,	// AsmOLOCG
    531291U,	// AsmOLOCGR
    531284U,	// AsmOLOCR
    5774073U,	// AsmOSTOC
    5774087U,	// AsmOSTOCG
    358093009U,	// AsmSTOC
    358093971U,	// AsmSTOCG
    2104974U,	// BASR
    203627U,	// BR
    6299311U,	// BRAS
    6298313U,	// BRASL
    24531U,	// BRC
    24526U,	// BRCL
    6823613U,	// BRCT
    6821121U,	// BRCTG
    7344301U,	// C
    7344202U,	// CDB
    2104176U,	// CDBR
    2104401U,	// CDFBR
    2104446U,	// CDGBR
    360193119U,	// CDLFBR
    360193164U,	// CDLGBR
    7344247U,	// CEB
    2104295U,	// CEBR
    2104408U,	// CEFBR
    2104453U,	// CEGBR
    360193127U,	// CELFBR
    360193172U,	// CELGBR
    7871363U,	// CFDBR
    7871490U,	// CFEBR
    8394650U,	// CFI
    0U,	// CFIMux
    7871692U,	// CFXBR
    7345289U,	// CG
    7871378U,	// CGDBR
    7871505U,	// CGEBR
    7345121U,	// CGF
    8394661U,	// CGFI
    2104705U,	// CGFR
    8919641U,	// CGFRL
    7345494U,	// CGH
    9443311U,	// CGHI
    8919692U,	// CGHRL
    1583173U,	// CGHSI
    290773U,	// CGIJ
    2104788U,	// CGR
    10055657U,	// CGRJ
    8919666U,	// CGRL
    7871707U,	// CGXBR
    7345458U,	// CH
    7345168U,	// CHF
    1583188U,	// CHHSI
    9443300U,	// CHI
    8919686U,	// CHRL
    1583159U,	// CHSI
    7348004U,	// CHY
    8394142U,	// CIH
    290769U,	// CIJ
    7346469U,	// CL
    28857U,	// CLC
    0U,	// CLCLoop
    0U,	// CLCSequence
    360192906U,	// CLFDBR
    360193033U,	// CLFEBR
    10496061U,	// CLFHSI
    11016141U,	// CLFI
    0U,	// CLFIMux
    360193235U,	// CLFXBR
    7345333U,	// CLG
    360192921U,	// CLGDBR
    360193048U,	// CLGEBR
    7345132U,	// CLGF
    11016114U,	// CLGFI
    2104718U,	// CLGFR
    8919648U,	// CLGFRL
    8919699U,	// CLGHRL
    10496076U,	// CLGHSI
    356314U,	// CLGIJ
    2104812U,	// CLGR
    10055662U,	// CLGRJ
    8919672U,	// CLGRL
    360193250U,	// CLGXBR
    7345204U,	// CLHF
    10496091U,	// CLHHSI
    8919715U,	// CLHRL
    11544607U,	// CLI
    11015587U,	// CLIH
    356320U,	// CLIJ
    11546430U,	// CLIY
    0U,	// CLMux
    2104932U,	// CLR
    10055668U,	// CLRJ
    8919736U,	// CLRL
    2105047U,	// CLST
    0U,	// CLSTLoop
    7348062U,	// CLY
    0U,	// CMux
    85990722U,	// CPSDRdd
    85990722U,	// CPSDRds
    85990722U,	// CPSDRsd
    85990722U,	// CPSDRss
    2104602U,	// CR
    10055653U,	// CRJ
    8919629U,	// CRL
    419962549U,	// CS
    419960050U,	// CSG
    419962741U,	// CSY
    2104504U,	// CXBR
    2104439U,	// CXFBR
    2104484U,	// CXGBR
    360193135U,	// CXLFBR
    360193180U,	// CXLGBR
    7347967U,	// CY
    0U,	// CallBASR
    0U,	// CallBR
    0U,	// CallBRASL
    0U,	// CallJG
    0U,	// CondStore16
    0U,	// CondStore16Inv
    0U,	// CondStore16Mux
    0U,	// CondStore16MuxInv
    0U,	// CondStore32
    0U,	// CondStore32Inv
    0U,	// CondStore64
    0U,	// CondStore64Inv
    0U,	// CondStore8
    0U,	// CondStore8Inv
    0U,	// CondStore8Mux
    0U,	// CondStore8MuxInv
    0U,	// CondStoreF32
    0U,	// CondStoreF32Inv
    0U,	// CondStoreF64
    0U,	// CondStoreF64Inv
    4175U,	// DDB
    531318U,	// DDBR
    4221U,	// DEB
    531438U,	// DEBR
    6454U,	// DL
    5306U,	// DLG
    531954U,	// DLGR
    532073U,	// DLR
    5367U,	// DSG
    5118U,	// DSGF
    531889U,	// DSGFR
    531991U,	// DSGR
    531647U,	// DXBR
    12065635U,	// EAR
    200947U,	// ETND
    7871393U,	// FIDBR
    360189975U,	// FIDBRA
    7871520U,	// FIEBR
    360189983U,	// FIEBRA
    7871722U,	// FIXBR
    360190007U,	// FIXBRA
    2104842U,	// FLOGR
    0U,	// GOT
    4272U,	// IC
    4272U,	// IC32
    7934U,	// IC32Y
    7934U,	// ICY
    0U,	// IIFMux
    11015189U,	// IIHF
    0U,	// IIHF64
    10491246U,	// IIHH
    0U,	// IIHH64
    10492238U,	// IIHL
    0U,	// IIHL64
    0U,	// IIHMux
    11015226U,	// IILF
    0U,	// IILF64
    10491399U,	// IILH
    0U,	// IILH64
    10492325U,	// IILL
    0U,	// IILL64
    0U,	// IILMux
    203472U,	// IPM
    18542U,	// J
    17570U,	// JG
    7346464U,	// L
    0U,	// L128
    7344134U,	// LA
    488640513U,	// LAA
    488641625U,	// LAAG
    488642845U,	// LAAL
    488641702U,	// LAALG
    488643289U,	// LAN
    488641766U,	// LANG
    488643310U,	// LAO
    488641772U,	// LAOG
    8919621U,	// LARL
    488644340U,	// LAX
    488641825U,	// LAXG
    7347961U,	// LAY
    7344294U,	// LB
    7345451U,	// LBH
    0U,	// LBMux
    2104492U,	// LBR
    2104175U,	// LCDBR
    2104294U,	// LCEBR
    2104704U,	// LCGFR
    2104787U,	// LCGR
    2104614U,	// LCR
    2104503U,	// LCXBR
    7344367U,	// LD
    7344252U,	// LDEB
    2104301U,	// LDEBR
    2104800U,	// LDGR
    2104637U,	// LDR
    2104510U,	// LDXBR
    360189991U,	// LDXBRA
    7347977U,	// LDY
    7344727U,	// LE
    2104188U,	// LEDBR
    360189967U,	// LEDBRA
    2104674U,	// LER
    2104517U,	// LEXBR
    360189999U,	// LEXBRA
    7347988U,	// LEY
    7345481U,	// LFH
    7345321U,	// LG
    7344288U,	// LGB
    2104462U,	// LGBR
    2104631U,	// LGDR
    7345127U,	// LGF
    8394668U,	// LGFI
    2104712U,	// LGFR
    8919649U,	// LGFRL
    7345513U,	// LGH
    9443317U,	// LGHI
    2104891U,	// LGHR
    8919700U,	// LGHRL
    2104807U,	// LGR
    8919673U,	// LGRL
    7345636U,	// LH
    7345544U,	// LHH
    9443343U,	// LHI
    0U,	// LHIMux
    0U,	// LHMux
    2104898U,	// LHR
    8919716U,	// LHRL
    7348009U,	// LHY
    7344318U,	// LLC
    7345456U,	// LLCH
    0U,	// LLCMux
    2104619U,	// LLCR
    0U,	// LLCRMux
    7344298U,	// LLGC
    2104606U,	// LLGCR
    7345138U,	// LLGF
    2104725U,	// LLGFR
    8919656U,	// LLGFRL
    7345512U,	// LLGH
    2104890U,	// LLGHR
    8919707U,	// LLGHRL
    7345760U,	// LLH
    7345543U,	// LLHH
    0U,	// LLHMux
    2104903U,	// LLHR
    8919722U,	// LLHRL
    0U,	// LLHRMux
    11015195U,	// LLIHF
    12588404U,	// LLIHH
    12589396U,	// LLIHL
    11015232U,	// LLILF
    12588557U,	// LLILH
    12589483U,	// LLILL
    488641755U,	// LMG
    0U,	// LMux
    2104238U,	// LNDBR
    2104359U,	// LNEBR
    2104739U,	// LNGFR
    2104836U,	// LNGR
    2104953U,	// LNR
    2104567U,	// LNXBR
    36789U,	// LOC
    36803U,	// LOCG
    40958U,	// LOCGR
    40953U,	// LOCR
    2104245U,	// LPDBR
    2104366U,	// LPEBR
    2104746U,	// LPGFR
    2104849U,	// LPGR
    2104969U,	// LPR
    2104574U,	// LPXBR
    2104923U,	// LR
    8919737U,	// LRL
    0U,	// LRMux
    7347945U,	// LRV
    7345428U,	// LRVG
    2104873U,	// LRVGR
    2104990U,	// LRVR
    7347907U,	// LT
    2104266U,	// LTDBR
    2104266U,	// LTDBRCompare
    2104387U,	// LTEBR
    2104387U,	// LTEBRCompare
    7345416U,	// LTG
    7345162U,	// LTGF
    2104767U,	// LTGFR
    2104867U,	// LTGR
    2104985U,	// LTR
    2104594U,	// LTXBR
    2104594U,	// LTXBRCompare
    0U,	// LX
    7344229U,	// LXDB
    2104273U,	// LXDBR
    7344282U,	// LXEB
    2104394U,	// LXEBR
    2104996U,	// LXR
    7348058U,	// LY
    204105U,	// LZDR
    204148U,	// LZER
    204457U,	// LZXR
    554176580U,	// MADB
    621288296U,	// MADBR
    554176625U,	// MAEB
    621288415U,	// MAEBR
    4180U,	// MDB
    531368U,	// MDBR
    4226U,	// MDEB
    531444U,	// MDEBR
    4232U,	// MEEB
    531451U,	// MEEBR
    1579003U,	// MGHI
    5890U,	// MH
    1579028U,	// MHI
    7982U,	// MHY
    5323U,	// MLG
    531960U,	// MLGR
    7865U,	// MS
    554176607U,	// MSDB
    621288387U,	// MSDBR
    554176660U,	// MSEB
    621288508U,	// MSEBR
    1054681U,	// MSFI
    5372U,	// MSG
    5124U,	// MSGF
    1054656U,	// MSGFI
    531896U,	// MSGFR
    531997U,	// MSGR
    532116U,	// MSR
    8058U,	// MSY
    28897U,	// MVC
    0U,	// MVCLoop
    0U,	// MVCSequence
    1583105U,	// MVGHI
    1583112U,	// MVHHI
    1583129U,	// MVHI
    11544675U,	// MVI
    11546446U,	// MVIY
    2105059U,	// MVST
    0U,	// MVSTLoop
    531697U,	// MXBR
    4203U,	// MXDB
    531416U,	// MXDBR
    6875U,	// N
    28872U,	// NC
    0U,	// NCLoop
    0U,	// NCSequence
    5352U,	// NG
    531973U,	// NGR
    85989605U,	// NGRK
    11544612U,	// NI
    0U,	// NIFMux
    3150882U,	// NIHF
    0U,	// NIHF64
    10491259U,	// NIHH
    0U,	// NIHH64
    10492251U,	// NIHL
    0U,	// NIHL64
    0U,	// NIHMux
    3150919U,	// NILF
    0U,	// NILF64
    10491412U,	// NILH
    0U,	// NILH64
    10492338U,	// NILL
    0U,	// NILL64
    0U,	// NILMux
    11546436U,	// NIY
    532090U,	// NR
    85989641U,	// NRK
    7345421U,	// NTSTG
    8045U,	// NY
    6896U,	// O
    28877U,	// OC
    0U,	// OCLoop
    0U,	// OCSequence
    5358U,	// OG
    531980U,	// OGR
    85989611U,	// OGRK
    11544616U,	// OI
    0U,	// OIFMux
    3150888U,	// OIHF
    0U,	// OIHF64
    10491265U,	// OIHH
    0U,	// OIHH64
    10492257U,	// OIHL
    0U,	// OIHL64
    0U,	// OIHMux
    3150925U,	// OILF
    0U,	// OILF64
    10491418U,	// OILH
    0U,	// OILH64
    10492344U,	// OILL
    0U,	// OILL64
    0U,	// OILMux
    11546441U,	// OIY
    532095U,	// OR
    85989646U,	// ORK
    8049U,	// OY
    405738U,	// PFD
    146002U,	// PFDRL
    2105031U,	// POPCNT
    1226838026U,	// PPA
    688395371U,	// RISBG
    688395371U,	// RISBG32
    688397022U,	// RISBGN
    688395418U,	// RISBHG
    0U,	// RISBHH
    0U,	// RISBHL
    688395437U,	// RISBLG
    0U,	// RISBLH
    0U,	// RISBLL
    0U,	// RISBMux
    488643012U,	// RLL
    488641727U,	// RLLG
    688395378U,	// RNSBG
    688395385U,	// ROSBG
    688395392U,	// RXSBG
    0U,	// Return
    7858U,	// S
    4192U,	// SDB
    531396U,	// SDBR
    4245U,	// SEB
    531517U,	// SEBR
    5363U,	// SG
    5119U,	// SGF
    531890U,	// SGFR
    531992U,	// SGR
    85989617U,	// SGRK
    6028U,	// SH
    7987U,	// SHY
    6860U,	// SL
    4261U,	// SLB
    5221U,	// SLBG
    531627U,	// SLBR
    3151827U,	// SLFI
    5334U,	// SLG
    531915U,	// SLGBR
    5112U,	// SLGF
    3151801U,	// SLGFI
    531868U,	// SLGFR
    531966U,	// SLGR
    85989598U,	// SLGRK
    5249481U,	// SLL
    488641733U,	// SLLG
    488642752U,	// SLLK
    532084U,	// SLR
    85989635U,	// SLRK
    8035U,	// SLY
    7344217U,	// SQDB
    2104252U,	// SQDBR
    7344270U,	// SQEB
    2104373U,	// SQEBR
    2104581U,	// SQXBR
    532112U,	// SR
    5247039U,	// SRA
    488641631U,	// SRAG
    488642716U,	// SRAK
    85989651U,	// SRK
    5249726U,	// SRL
    488641744U,	// SRLG
    488642758U,	// SRLK
    2105053U,	// SRST
    0U,	// SRSTLoop
    7347929U,	// ST
    0U,	// ST128
    7344348U,	// STC
    7345475U,	// STCH
    0U,	// STCMux
    7347971U,	// STCY
    7344377U,	// STD
    7347982U,	// STDY
    7345111U,	// STE
    7347993U,	// STEY
    7345486U,	// STFH
    7345423U,	// STG
    8919679U,	// STGRL
    7346064U,	// STH
    7345555U,	// STHH
    0U,	// STHMux
    8919729U,	// STHRL
    7348024U,	// STHY
    488641760U,	// STMG
    0U,	// STMux
    44985U,	// STOC
    45000U,	// STOCG
    8919747U,	// STRL
    7347950U,	// STRV
    7345434U,	// STRVG
    0U,	// STX
    7348095U,	// STY
    531724U,	// SXBR
    8054U,	// SY
    0U,	// Select32
    0U,	// Select32Mux
    0U,	// Select64
    0U,	// SelectF128
    0U,	// SelectF32
    0U,	// SelectF64
    0U,	// Serialize
    208591U,	// TABORT
    10496742U,	// TBEGIN
    10494147U,	// TBEGINC
    0U,	// TBEGIN_nofloat
    4030U,	// TEND
    0U,	// TLS_GDCALL
    0U,	// TLS_LDCALL
    11545301U,	// TM
    12588429U,	// TMHH
    0U,	// TMHH64
    12589415U,	// TMHL
    0U,	// TMHL64
    0U,	// TMHMux
    12588645U,	// TMLH
    0U,	// TMLH64
    12589502U,	// TMLL
    0U,	// TMLL64
    0U,	// TMLMux
    11546472U,	// TMY
    7926U,	// X
    28902U,	// XC
    0U,	// XCLoop
    0U,	// XCSequence
    5411U,	// XG
    532016U,	// XGR
    85989623U,	// XGRK
    11544680U,	// XI
    0U,	// XIFMux
    3150894U,	// XIHF
    0U,	// XIHF64
    3150931U,	// XILF
    0U,	// XILF64
    11546452U,	// XIY
    532133U,	// XR
    85989656U,	// XRK
    8068U,	// XY
    0U,	// ZEXT128_32
    0U,	// ZEXT128_64
    0U
  };

  static const char AsmStrs[] = {
  /* 0 */ 'l', 'a', 'a', 9, 0,
  /* 5 */ 'l', 'a', 9, 0,
  /* 9 */ 'p', 'p', 'a', 9, 0,
  /* 14 */ 'l', 'e', 'd', 'b', 'r', 'a', 9, 0,
  /* 22 */ 'f', 'i', 'd', 'b', 'r', 'a', 9, 0,
  /* 30 */ 'f', 'i', 'e', 'b', 'r', 'a', 9, 0,
  /* 38 */ 'l', 'd', 'x', 'b', 'r', 'a', 9, 0,
  /* 46 */ 'l', 'e', 'x', 'b', 'r', 'a', 9, 0,
  /* 54 */ 'f', 'i', 'x', 'b', 'r', 'a', 9, 0,
  /* 62 */ 's', 'r', 'a', 9, 0,
  /* 67 */ 'm', 'a', 'd', 'b', 9, 0,
  /* 73 */ 'c', 'd', 'b', 9, 0,
  /* 78 */ 'd', 'd', 'b', 9, 0,
  /* 83 */ 'm', 'd', 'b', 9, 0,
  /* 88 */ 's', 'q', 'd', 'b', 9, 0,
  /* 94 */ 'm', 's', 'd', 'b', 9, 0,
  /* 100 */ 'l', 'x', 'd', 'b', 9, 0,
  /* 106 */ 'm', 'x', 'd', 'b', 9, 0,
  /* 112 */ 'm', 'a', 'e', 'b', 9, 0,
  /* 118 */ 'c', 'e', 'b', 9, 0,
  /* 123 */ 'l', 'd', 'e', 'b', 9, 0,
  /* 129 */ 'm', 'd', 'e', 'b', 9, 0,
  /* 135 */ 'm', 'e', 'e', 'b', 9, 0,
  /* 141 */ 's', 'q', 'e', 'b', 9, 0,
  /* 147 */ 'm', 's', 'e', 'b', 9, 0,
  /* 153 */ 'l', 'x', 'e', 'b', 9, 0,
  /* 159 */ 'l', 'g', 'b', 9, 0,
  /* 164 */ 's', 'l', 'b', 9, 0,
  /* 169 */ 'l', 'l', 'g', 'c', 9, 0,
  /* 175 */ 'i', 'c', 9, 0,
  /* 179 */ 'a', 'l', 'c', 9, 0,
  /* 184 */ 'c', 'l', 'c', 9, 0,
  /* 189 */ 'l', 'l', 'c', 9, 0,
  /* 194 */ 't', 'b', 'e', 'g', 'i', 'n', 'c', 9, 0,
  /* 203 */ 'l', 'o', 'c', 9, 0,
  /* 208 */ 's', 't', 'o', 'c', 9, 0,
  /* 214 */ 'b', 'r', 'c', 9, 0,
  /* 219 */ 's', 't', 'c', 9, 0,
  /* 224 */ 'm', 'v', 'c', 9, 0,
  /* 229 */ 'x', 'c', 9, 0,
  /* 233 */ 'p', 'f', 'd', 9, 0,
  /* 238 */ 'l', 'd', 9, 0,
  /* 242 */ 'e', 't', 'n', 'd', 9, 0,
  /* 248 */ 's', 't', 'd', 9, 0,
  /* 253 */ 'l', 'o', 'c', 'e', 9, 0,
  /* 259 */ 's', 't', 'o', 'c', 'e', 9, 0,
  /* 266 */ 'l', 'o', 'c', 'g', 'e', 9, 0,
  /* 273 */ 's', 't', 'o', 'c', 'g', 'e', 9, 0,
  /* 281 */ 'j', 'g', 'e', 9, 0,
  /* 286 */ 'l', 'o', 'c', 'h', 'e', 9, 0,
  /* 293 */ 's', 't', 'o', 'c', 'h', 'e', 9, 0,
  /* 301 */ 'l', 'o', 'c', 'g', 'h', 'e', 9, 0,
  /* 309 */ 's', 't', 'o', 'c', 'g', 'h', 'e', 9, 0,
  /* 318 */ 'j', 'g', 'h', 'e', 9, 0,
  /* 324 */ 'c', 'i', 'j', 'h', 'e', 9, 0,
  /* 331 */ 'c', 'g', 'i', 'j', 'h', 'e', 9, 0,
  /* 339 */ 'c', 'l', 'g', 'i', 'j', 'h', 'e', 9, 0,
  /* 348 */ 'c', 'l', 'i', 'j', 'h', 'e', 9, 0,
  /* 356 */ 'c', 'r', 'j', 'h', 'e', 9, 0,
  /* 363 */ 'c', 'g', 'r', 'j', 'h', 'e', 9, 0,
  /* 371 */ 'c', 'l', 'g', 'r', 'j', 'h', 'e', 9, 0,
  /* 380 */ 'c', 'l', 'r', 'j', 'h', 'e', 9, 0,
  /* 388 */ 'l', 'o', 'c', 'n', 'h', 'e', 9, 0,
  /* 396 */ 's', 't', 'o', 'c', 'n', 'h', 'e', 9, 0,
  /* 405 */ 'l', 'o', 'c', 'g', 'n', 'h', 'e', 9, 0,
  /* 414 */ 's', 't', 'o', 'c', 'g', 'n', 'h', 'e', 9, 0,
  /* 424 */ 'j', 'g', 'n', 'h', 'e', 9, 0,
  /* 431 */ 'c', 'i', 'j', 'n', 'h', 'e', 9, 0,
  /* 439 */ 'c', 'g', 'i', 'j', 'n', 'h', 'e', 9, 0,
  /* 448 */ 'c', 'l', 'g', 'i', 'j', 'n', 'h', 'e', 9, 0,
  /* 458 */ 'c', 'l', 'i', 'j', 'n', 'h', 'e', 9, 0,
  /* 467 */ 'c', 'r', 'j', 'n', 'h', 'e', 9, 0,
  /* 475 */ 'c', 'g', 'r', 'j', 'n', 'h', 'e', 9, 0,
  /* 484 */ 'c', 'l', 'g', 'r', 'j', 'n', 'h', 'e', 9, 0,
  /* 494 */ 'c', 'l', 'r', 'j', 'n', 'h', 'e', 9, 0,
  /* 503 */ 'l', 'o', 'c', 'r', 'n', 'h', 'e', 9, 0,
  /* 512 */ 'l', 'o', 'c', 'g', 'r', 'n', 'h', 'e', 9, 0,
  /* 522 */ 'l', 'o', 'c', 'r', 'h', 'e', 9, 0,
  /* 530 */ 'l', 'o', 'c', 'g', 'r', 'h', 'e', 9, 0,
  /* 539 */ 'c', 'i', 'j', 'e', 9, 0,
  /* 545 */ 'c', 'g', 'i', 'j', 'e', 9, 0,
  /* 552 */ 'c', 'l', 'g', 'i', 'j', 'e', 9, 0,
  /* 560 */ 'c', 'l', 'i', 'j', 'e', 9, 0,
  /* 567 */ 'c', 'r', 'j', 'e', 9, 0,
  /* 573 */ 'c', 'g', 'r', 'j', 'e', 9, 0,
  /* 580 */ 'c', 'l', 'g', 'r', 'j', 'e', 9, 0,
  /* 588 */ 'c', 'l', 'r', 'j', 'e', 9, 0,
  /* 595 */ 'l', 'o', 'c', 'l', 'e', 9, 0,
  /* 602 */ 's', 't', 'o', 'c', 'l', 'e', 9, 0,
  /* 610 */ 'l', 'o', 'c', 'g', 'l', 'e', 9, 0,
  /* 618 */ 's', 't', 'o', 'c', 'g', 'l', 'e', 9, 0,
  /* 627 */ 'j', 'g', 'l', 'e', 9, 0,
  /* 633 */ 'c', 'i', 'j', 'l', 'e', 9, 0,
  /* 640 */ 'c', 'g', 'i', 'j', 'l', 'e', 9, 0,
  /* 648 */ 'c', 'l', 'g', 'i', 'j', 'l', 'e', 9, 0,
  /* 657 */ 'c', 'l', 'i', 'j', 'l', 'e', 9, 0,
  /* 665 */ 'c', 'r', 'j', 'l', 'e', 9, 0,
  /* 672 */ 'c', 'g', 'r', 'j', 'l', 'e', 9, 0,
  /* 680 */ 'c', 'l', 'g', 'r', 'j', 'l', 'e', 9, 0,
  /* 689 */ 'c', 'l', 'r', 'j', 'l', 'e', 9, 0,
  /* 697 */ 'l', 'o', 'c', 'n', 'l', 'e', 9, 0,
  /* 705 */ 's', 't', 'o', 'c', 'n', 'l', 'e', 9, 0,
  /* 714 */ 'l', 'o', 'c', 'g', 'n', 'l', 'e', 9, 0,
  /* 723 */ 's', 't', 'o', 'c', 'g', 'n', 'l', 'e', 9, 0,
  /* 733 */ 'j', 'g', 'n', 'l', 'e', 9, 0,
  /* 740 */ 'c', 'i', 'j', 'n', 'l', 'e', 9, 0,
  /* 748 */ 'c', 'g', 'i', 'j', 'n', 'l', 'e', 9, 0,
  /* 757 */ 'c', 'l', 'g', 'i', 'j', 'n', 'l', 'e', 9, 0,
  /* 767 */ 'c', 'l', 'i', 'j', 'n', 'l', 'e', 9, 0,
  /* 776 */ 'c', 'r', 'j', 'n', 'l', 'e', 9, 0,
  /* 784 */ 'c', 'g', 'r', 'j', 'n', 'l', 'e', 9, 0,
  /* 793 */ 'c', 'l', 'g', 'r', 'j', 'n', 'l', 'e', 9, 0,
  /* 803 */ 'c', 'l', 'r', 'j', 'n', 'l', 'e', 9, 0,
  /* 812 */ 'l', 'o', 'c', 'r', 'n', 'l', 'e', 9, 0,
  /* 821 */ 'l', 'o', 'c', 'g', 'r', 'n', 'l', 'e', 9, 0,
  /* 831 */ 'l', 'o', 'c', 'r', 'l', 'e', 9, 0,
  /* 839 */ 'l', 'o', 'c', 'g', 'r', 'l', 'e', 9, 0,
  /* 848 */ 'l', 'o', 'c', 'n', 'e', 9, 0,
  /* 855 */ 's', 't', 'o', 'c', 'n', 'e', 9, 0,
  /* 863 */ 'l', 'o', 'c', 'g', 'n', 'e', 9, 0,
  /* 871 */ 's', 't', 'o', 'c', 'g', 'n', 'e', 9, 0,
  /* 880 */ 'j', 'g', 'n', 'e', 9, 0,
  /* 886 */ 'c', 'i', 'j', 'n', 'e', 9, 0,
  /* 893 */ 'c', 'g', 'i', 'j', 'n', 'e', 9, 0,
  /* 901 */ 'c', 'l', 'g', 'i', 'j', 'n', 'e', 9, 0,
  /* 910 */ 'c', 'l', 'i', 'j', 'n', 'e', 9, 0,
  /* 918 */ 'c', 'r', 'j', 'n', 'e', 9, 0,
  /* 925 */ 'c', 'g', 'r', 'j', 'n', 'e', 9, 0,
  /* 933 */ 'c', 'l', 'g', 'r', 'j', 'n', 'e', 9, 0,
  /* 942 */ 'c', 'l', 'r', 'j', 'n', 'e', 9, 0,
  /* 950 */ 'l', 'o', 'c', 'r', 'n', 'e', 9, 0,
  /* 958 */ 'l', 'o', 'c', 'g', 'r', 'n', 'e', 9, 0,
  /* 967 */ 'l', 'o', 'c', 'r', 'e', 9, 0,
  /* 974 */ 'l', 'o', 'c', 'g', 'r', 'e', 9, 0,
  /* 982 */ 's', 't', 'e', 9, 0,
  /* 987 */ 'a', 'g', 'f', 9, 0,
  /* 992 */ 'c', 'g', 'f', 9, 0,
  /* 997 */ 'a', 'l', 'g', 'f', 9, 0,
  /* 1003 */ 'c', 'l', 'g', 'f', 9, 0,
  /* 1009 */ 'l', 'l', 'g', 'f', 9, 0,
  /* 1015 */ 's', 'l', 'g', 'f', 9, 0,
  /* 1021 */ 'd', 's', 'g', 'f', 9, 0,
  /* 1027 */ 'm', 's', 'g', 'f', 9, 0,
  /* 1033 */ 'l', 't', 'g', 'f', 9, 0,
  /* 1039 */ 'c', 'h', 'f', 9, 0,
  /* 1044 */ 'i', 'i', 'h', 'f', 9, 0,
  /* 1050 */ 'l', 'l', 'i', 'h', 'f', 9, 0,
  /* 1057 */ 'n', 'i', 'h', 'f', 9, 0,
  /* 1063 */ 'o', 'i', 'h', 'f', 9, 0,
  /* 1069 */ 'x', 'i', 'h', 'f', 9, 0,
  /* 1075 */ 'c', 'l', 'h', 'f', 9, 0,
  /* 1081 */ 'i', 'i', 'l', 'f', 9, 0,
  /* 1087 */ 'l', 'l', 'i', 'l', 'f', 9, 0,
  /* 1094 */ 'n', 'i', 'l', 'f', 9, 0,
  /* 1100 */ 'o', 'i', 'l', 'f', 9, 0,
  /* 1106 */ 'x', 'i', 'l', 'f', 9, 0,
  /* 1112 */ 'l', 'a', 'a', 'g', 9, 0,
  /* 1118 */ 's', 'r', 'a', 'g', 9, 0,
  /* 1124 */ 's', 'l', 'b', 'g', 9, 0,
  /* 1130 */ 'r', 'i', 's', 'b', 'g', 9, 0,
  /* 1137 */ 'r', 'n', 's', 'b', 'g', 9, 0,
  /* 1144 */ 'r', 'o', 's', 'b', 'g', 9, 0,
  /* 1151 */ 'r', 'x', 's', 'b', 'g', 9, 0,
  /* 1158 */ 'a', 'l', 'c', 'g', 9, 0,
  /* 1164 */ 'l', 'o', 'c', 'g', 9, 0,
  /* 1170 */ 's', 't', 'o', 'c', 'g', 9, 0,
  /* 1177 */ 'r', 'i', 's', 'b', 'h', 'g', 9, 0,
  /* 1185 */ 'j', 'g', 9, 0,
  /* 1189 */ 'l', 'a', 'a', 'l', 'g', 9, 0,
  /* 1196 */ 'r', 'i', 's', 'b', 'l', 'g', 9, 0,
  /* 1204 */ 'c', 'l', 'g', 9, 0,
  /* 1209 */ 'd', 'l', 'g', 9, 0,
  /* 1214 */ 'r', 'l', 'l', 'g', 9, 0,
  /* 1220 */ 's', 'l', 'l', 'g', 9, 0,
  /* 1226 */ 'm', 'l', 'g', 9, 0,
  /* 1231 */ 's', 'r', 'l', 'g', 9, 0,
  /* 1237 */ 's', 'l', 'g', 9, 0,
  /* 1242 */ 'l', 'm', 'g', 9, 0,
  /* 1247 */ 's', 't', 'm', 'g', 9, 0,
  /* 1253 */ 'l', 'a', 'n', 'g', 9, 0,
  /* 1259 */ 'l', 'a', 'o', 'g', 9, 0,
  /* 1265 */ 'c', 's', 'g', 9, 0,
  /* 1270 */ 'd', 's', 'g', 9, 0,
  /* 1275 */ 'm', 's', 'g', 9, 0,
  /* 1280 */ 'b', 'r', 'c', 't', 'g', 9, 0,
  /* 1287 */ 'l', 't', 'g', 9, 0,
  /* 1292 */ 'n', 't', 's', 't', 'g', 9, 0,
  /* 1299 */ 'l', 'r', 'v', 'g', 9, 0,
  /* 1305 */ 's', 't', 'r', 'v', 'g', 9, 0,
  /* 1312 */ 'l', 'a', 'x', 'g', 9, 0,
  /* 1318 */ 'a', 'h', 9, 0,
  /* 1322 */ 'l', 'b', 'h', 9, 0,
  /* 1327 */ 'l', 'l', 'c', 'h', 9, 0,
  /* 1333 */ 'l', 'o', 'c', 'h', 9, 0,
  /* 1339 */ 's', 't', 'o', 'c', 'h', 9, 0,
  /* 1346 */ 's', 't', 'c', 'h', 9, 0,
  /* 1352 */ 'l', 'f', 'h', 9, 0,
  /* 1357 */ 's', 't', 'f', 'h', 9, 0,
  /* 1363 */ 'l', 'o', 'c', 'g', 'h', 9, 0,
  /* 1370 */ 's', 't', 'o', 'c', 'g', 'h', 9, 0,
  /* 1378 */ 'j', 'g', 'h', 9, 0,
  /* 1383 */ 'l', 'l', 'g', 'h', 9, 0,
  /* 1389 */ 'i', 'i', 'h', 'h', 9, 0,
  /* 1395 */ 'l', 'l', 'i', 'h', 'h', 9, 0,
  /* 1402 */ 'n', 'i', 'h', 'h', 9, 0,
  /* 1408 */ 'o', 'i', 'h', 'h', 9, 0,
  /* 1414 */ 'l', 'l', 'h', 'h', 9, 0,
  /* 1420 */ 't', 'm', 'h', 'h', 9, 0,
  /* 1426 */ 's', 't', 'h', 'h', 9, 0,
  /* 1432 */ 'a', 'i', 'h', 9, 0,
  /* 1437 */ 'c', 'i', 'h', 9, 0,
  /* 1442 */ 'c', 'l', 'i', 'h', 9, 0,
  /* 1448 */ 'c', 'i', 'j', 'h', 9, 0,
  /* 1454 */ 'c', 'g', 'i', 'j', 'h', 9, 0,
  /* 1461 */ 'c', 'l', 'g', 'i', 'j', 'h', 9, 0,
  /* 1469 */ 'c', 'l', 'i', 'j', 'h', 9, 0,
  /* 1476 */ 'c', 'r', 'j', 'h', 9, 0,
  /* 1482 */ 'c', 'g', 'r', 'j', 'h', 9, 0,
  /* 1489 */ 'c', 'l', 'g', 'r', 'j', 'h', 9, 0,
  /* 1497 */ 'c', 'l', 'r', 'j', 'h', 9, 0,
  /* 1504 */ 'l', 'o', 'c', 'l', 'h', 9, 0,
  /* 1511 */ 's', 't', 'o', 'c', 'l', 'h', 9, 0,
  /* 1519 */ 'l', 'o', 'c', 'g', 'l', 'h', 9, 0,
  /* 1527 */ 's', 't', 'o', 'c', 'g', 'l', 'h', 9, 0,
  /* 1536 */ 'j', 'g', 'l', 'h', 9, 0,
  /* 1542 */ 'i', 'i', 'l', 'h', 9, 0,
  /* 1548 */ 'l', 'l', 'i', 'l', 'h', 9, 0,
  /* 1555 */ 'n', 'i', 'l', 'h', 9, 0,
  /* 1561 */ 'o', 'i', 'l', 'h', 9, 0,
  /* 1567 */ 'c', 'i', 'j', 'l', 'h', 9, 0,
  /* 1574 */ 'c', 'g', 'i', 'j', 'l', 'h', 9, 0,
  /* 1582 */ 'c', 'l', 'g', 'i', 'j', 'l', 'h', 9, 0,
  /* 1591 */ 'c', 'l', 'i', 'j', 'l', 'h', 9, 0,
  /* 1599 */ 'c', 'r', 'j', 'l', 'h', 9, 0,
  /* 1606 */ 'c', 'g', 'r', 'j', 'l', 'h', 9, 0,
  /* 1614 */ 'c', 'l', 'g', 'r', 'j', 'l', 'h', 9, 0,
  /* 1623 */ 'c', 'l', 'r', 'j', 'l', 'h', 9, 0,
  /* 1631 */ 'l', 'l', 'h', 9, 0,
  /* 1636 */ 't', 'm', 'l', 'h', 9, 0,
  /* 1642 */ 'l', 'o', 'c', 'n', 'l', 'h', 9, 0,
  /* 1650 */ 's', 't', 'o', 'c', 'n', 'l', 'h', 9, 0,
  /* 1659 */ 'l', 'o', 'c', 'g', 'n', 'l', 'h', 9, 0,
  /* 1668 */ 's', 't', 'o', 'c', 'g', 'n', 'l', 'h', 9, 0,
  /* 1678 */ 'j', 'g', 'n', 'l', 'h', 9, 0,
  /* 1685 */ 'c', 'i', 'j', 'n', 'l', 'h', 9, 0,
  /* 1693 */ 'c', 'g', 'i', 'j', 'n', 'l', 'h', 9, 0,
  /* 1702 */ 'c', 'l', 'g', 'i', 'j', 'n', 'l', 'h', 9, 0,
  /* 1712 */ 'c', 'l', 'i', 'j', 'n', 'l', 'h', 9, 0,
  /* 1721 */ 'c', 'r', 'j', 'n', 'l', 'h', 9, 0,
  /* 1729 */ 'c', 'g', 'r', 'j', 'n', 'l', 'h', 9, 0,
  /* 1738 */ 'c', 'l', 'g', 'r', 'j', 'n', 'l', 'h', 9, 0,
  /* 1748 */ 'c', 'l', 'r', 'j', 'n', 'l', 'h', 9, 0,
  /* 1757 */ 'l', 'o', 'c', 'r', 'n', 'l', 'h', 9, 0,
  /* 1766 */ 'l', 'o', 'c', 'g', 'r', 'n', 'l', 'h', 9, 0,
  /* 1776 */ 'l', 'o', 'c', 'r', 'l', 'h', 9, 0,
  /* 1784 */ 'l', 'o', 'c', 'g', 'r', 'l', 'h', 9, 0,
  /* 1793 */ 'm', 'h', 9, 0,
  /* 1797 */ 'l', 'o', 'c', 'n', 'h', 9, 0,
  /* 1804 */ 's', 't', 'o', 'c', 'n', 'h', 9, 0,
  /* 1812 */ 'l', 'o', 'c', 'g', 'n', 'h', 9, 0,
  /* 1820 */ 's', 't', 'o', 'c', 'g', 'n', 'h', 9, 0,
  /* 1829 */ 'j', 'g', 'n', 'h', 9, 0,
  /* 1835 */ 'c', 'i', 'j', 'n', 'h', 9, 0,
  /* 1842 */ 'c', 'g', 'i', 'j', 'n', 'h', 9, 0,
  /* 1850 */ 'c', 'l', 'g', 'i', 'j', 'n', 'h', 9, 0,
  /* 1859 */ 'c', 'l', 'i', 'j', 'n', 'h', 9, 0,
  /* 1867 */ 'c', 'r', 'j', 'n', 'h', 9, 0,
  /* 1874 */ 'c', 'g', 'r', 'j', 'n', 'h', 9, 0,
  /* 1882 */ 'c', 'l', 'g', 'r', 'j', 'n', 'h', 9, 0,
  /* 1891 */ 'c', 'l', 'r', 'j', 'n', 'h', 9, 0,
  /* 1899 */ 'l', 'o', 'c', 'r', 'n', 'h', 9, 0,
  /* 1907 */ 'l', 'o', 'c', 'g', 'r', 'n', 'h', 9, 0,
  /* 1916 */ 'l', 'o', 'c', 'r', 'h', 9, 0,
  /* 1923 */ 'l', 'o', 'c', 'g', 'r', 'h', 9, 0,
  /* 1931 */ 's', 'h', 9, 0,
  /* 1935 */ 's', 't', 'h', 9, 0,
  /* 1940 */ 'a', 'f', 'i', 9, 0,
  /* 1945 */ 'c', 'f', 'i', 9, 0,
  /* 1950 */ 'a', 'g', 'f', 'i', 9, 0,
  /* 1956 */ 'c', 'g', 'f', 'i', 9, 0,
  /* 1962 */ 'a', 'l', 'g', 'f', 'i', 9, 0,
  /* 1969 */ 'c', 'l', 'g', 'f', 'i', 9, 0,
  /* 1976 */ 's', 'l', 'g', 'f', 'i', 9, 0,
  /* 1983 */ 'm', 's', 'g', 'f', 'i', 9, 0,
  /* 1990 */ 'a', 'l', 'f', 'i', 9, 0,
  /* 1996 */ 'c', 'l', 'f', 'i', 9, 0,
  /* 2002 */ 's', 'l', 'f', 'i', 9, 0,
  /* 2008 */ 'm', 's', 'f', 'i', 9, 0,
  /* 2014 */ 'a', 'h', 'i', 9, 0,
  /* 2019 */ 'c', 'h', 'i', 9, 0,
  /* 2024 */ 'a', 'g', 'h', 'i', 9, 0,
  /* 2030 */ 'c', 'g', 'h', 'i', 9, 0,
  /* 2036 */ 'l', 'g', 'h', 'i', 9, 0,
  /* 2042 */ 'm', 'g', 'h', 'i', 9, 0,
  /* 2048 */ 'm', 'v', 'g', 'h', 'i', 9, 0,
  /* 2055 */ 'm', 'v', 'h', 'h', 'i', 9, 0,
  /* 2062 */ 'l', 'h', 'i', 9, 0,
  /* 2067 */ 'm', 'h', 'i', 9, 0,
  /* 2072 */ 'm', 'v', 'h', 'i', 9, 0,
  /* 2078 */ 'c', 'l', 'i', 9, 0,
  /* 2083 */ 'n', 'i', 9, 0,
  /* 2087 */ 'o', 'i', 9, 0,
  /* 2091 */ 'a', 's', 'i', 9, 0,
  /* 2096 */ 'a', 'g', 's', 'i', 9, 0,
  /* 2102 */ 'c', 'h', 's', 'i', 9, 0,
  /* 2108 */ 'c', 'l', 'f', 'h', 's', 'i', 9, 0,
  /* 2116 */ 'c', 'g', 'h', 's', 'i', 9, 0,
  /* 2123 */ 'c', 'l', 'g', 'h', 's', 'i', 9, 0,
  /* 2131 */ 'c', 'h', 'h', 's', 'i', 9, 0,
  /* 2138 */ 'c', 'l', 'h', 'h', 's', 'i', 9, 0,
  /* 2146 */ 'm', 'v', 'i', 9, 0,
  /* 2151 */ 'x', 'i', 9, 0,
  /* 2155 */ 'c', 'i', 'j', 9, 0,
  /* 2160 */ 'c', 'g', 'i', 'j', 9, 0,
  /* 2166 */ 'c', 'l', 'g', 'i', 'j', 9, 0,
  /* 2173 */ 'c', 'l', 'i', 'j', 9, 0,
  /* 2179 */ 'c', 'r', 'j', 9, 0,
  /* 2184 */ 'c', 'g', 'r', 'j', 9, 0,
  /* 2190 */ 'c', 'l', 'g', 'r', 'j', 9, 0,
  /* 2197 */ 'c', 'l', 'r', 'j', 9, 0,
  /* 2203 */ 's', 'r', 'a', 'k', 9, 0,
  /* 2209 */ 'a', 'h', 'i', 'k', 9, 0,
  /* 2215 */ 'a', 'g', 'h', 'i', 'k', 9, 0,
  /* 2222 */ 'a', 'l', 'g', 'h', 's', 'i', 'k', 9, 0,
  /* 2231 */ 'a', 'l', 'h', 's', 'i', 'k', 9, 0,
  /* 2239 */ 's', 'l', 'l', 'k', 9, 0,
  /* 2245 */ 's', 'r', 'l', 'k', 9, 0,
  /* 2251 */ 'a', 'r', 'k', 9, 0,
  /* 2256 */ 'a', 'g', 'r', 'k', 9, 0,
  /* 2262 */ 'a', 'l', 'g', 'r', 'k', 9, 0,
  /* 2269 */ 's', 'l', 'g', 'r', 'k', 9, 0,
  /* 2276 */ 'n', 'g', 'r', 'k', 9, 0,
  /* 2282 */ 'o', 'g', 'r', 'k', 9, 0,
  /* 2288 */ 's', 'g', 'r', 'k', 9, 0,
  /* 2294 */ 'x', 'g', 'r', 'k', 9, 0,
  /* 2300 */ 'a', 'l', 'r', 'k', 9, 0,
  /* 2306 */ 's', 'l', 'r', 'k', 9, 0,
  /* 2312 */ 'n', 'r', 'k', 9, 0,
  /* 2317 */ 'o', 'r', 'k', 9, 0,
  /* 2322 */ 's', 'r', 'k', 9, 0,
  /* 2327 */ 'x', 'r', 'k', 9, 0,
  /* 2332 */ 'l', 'a', 'a', 'l', 9, 0,
  /* 2338 */ 'l', 'o', 'c', 'l', 9, 0,
  /* 2344 */ 's', 't', 'o', 'c', 'l', 9, 0,
  /* 2351 */ 'b', 'r', 'c', 'l', 9, 0,
  /* 2357 */ 'd', 'l', 9, 0,
  /* 2361 */ 'l', 'o', 'c', 'g', 'l', 9, 0,
  /* 2368 */ 's', 't', 'o', 'c', 'g', 'l', 9, 0,
  /* 2376 */ 'j', 'g', 'l', 9, 0,
  /* 2381 */ 'i', 'i', 'h', 'l', 9, 0,
  /* 2387 */ 'l', 'l', 'i', 'h', 'l', 9, 0,
  /* 2394 */ 'n', 'i', 'h', 'l', 9, 0,
  /* 2400 */ 'o', 'i', 'h', 'l', 9, 0,
  /* 2406 */ 't', 'm', 'h', 'l', 9, 0,
  /* 2412 */ 'c', 'i', 'j', 'l', 9, 0,
  /* 2418 */ 'c', 'g', 'i', 'j', 'l', 9, 0,
  /* 2425 */ 'c', 'l', 'g', 'i', 'j', 'l', 9, 0,
  /* 2433 */ 'c', 'l', 'i', 'j', 'l', 9, 0,
  /* 2440 */ 'c', 'r', 'j', 'l', 9, 0,
  /* 2446 */ 'c', 'g', 'r', 'j', 'l', 9, 0,
  /* 2453 */ 'c', 'l', 'g', 'r', 'j', 'l', 9, 0,
  /* 2461 */ 'c', 'l', 'r', 'j', 'l', 9, 0,
  /* 2468 */ 'i', 'i', 'l', 'l', 9, 0,
  /* 2474 */ 'l', 'l', 'i', 'l', 'l', 9, 0,
  /* 2481 */ 'n', 'i', 'l', 'l', 9, 0,
  /* 2487 */ 'o', 'i', 'l', 'l', 9, 0,
  /* 2493 */ 't', 'm', 'l', 'l', 9, 0,
  /* 2499 */ 'r', 'l', 'l', 9, 0,
  /* 2504 */ 's', 'l', 'l', 9, 0,
  /* 2509 */ 'l', 'o', 'c', 'n', 'l', 9, 0,
  /* 2516 */ 's', 't', 'o', 'c', 'n', 'l', 9, 0,
  /* 2524 */ 'l', 'o', 'c', 'g', 'n', 'l', 9, 0,
  /* 2532 */ 's', 't', 'o', 'c', 'g', 'n', 'l', 9, 0,
  /* 2541 */ 'j', 'g', 'n', 'l', 9, 0,
  /* 2547 */ 'c', 'i', 'j', 'n', 'l', 9, 0,
  /* 2554 */ 'c', 'g', 'i', 'j', 'n', 'l', 9, 0,
  /* 2562 */ 'c', 'l', 'g', 'i', 'j', 'n', 'l', 9, 0,
  /* 2571 */ 'c', 'l', 'i', 'j', 'n', 'l', 9, 0,
  /* 2579 */ 'c', 'r', 'j', 'n', 'l', 9, 0,
  /* 2586 */ 'c', 'g', 'r', 'j', 'n', 'l', 9, 0,
  /* 2594 */ 'c', 'l', 'g', 'r', 'j', 'n', 'l', 9, 0,
  /* 2603 */ 'c', 'l', 'r', 'j', 'n', 'l', 9, 0,
  /* 2611 */ 'l', 'o', 'c', 'r', 'n', 'l', 9, 0,
  /* 2619 */ 'l', 'o', 'c', 'g', 'r', 'n', 'l', 9, 0,
  /* 2628 */ 'l', 'a', 'r', 'l', 9, 0,
  /* 2634 */ 'l', 'o', 'c', 'r', 'l', 9, 0,
  /* 2641 */ 'p', 'f', 'd', 'r', 'l', 9, 0,
  /* 2648 */ 'c', 'g', 'f', 'r', 'l', 9, 0,
  /* 2655 */ 'c', 'l', 'g', 'f', 'r', 'l', 9, 0,
  /* 2663 */ 'l', 'l', 'g', 'f', 'r', 'l', 9, 0,
  /* 2671 */ 'l', 'o', 'c', 'g', 'r', 'l', 9, 0,
  /* 2679 */ 'c', 'l', 'g', 'r', 'l', 9, 0,
  /* 2686 */ 's', 't', 'g', 'r', 'l', 9, 0,
  /* 2693 */ 'c', 'h', 'r', 'l', 9, 0,
  /* 2699 */ 'c', 'g', 'h', 'r', 'l', 9, 0,
  /* 2706 */ 'c', 'l', 'g', 'h', 'r', 'l', 9, 0,
  /* 2714 */ 'l', 'l', 'g', 'h', 'r', 'l', 9, 0,
  /* 2722 */ 'c', 'l', 'h', 'r', 'l', 9, 0,
  /* 2729 */ 'l', 'l', 'h', 'r', 'l', 9, 0,
  /* 2736 */ 's', 't', 'h', 'r', 'l', 9, 0,
  /* 2743 */ 'c', 'l', 'r', 'l', 9, 0,
  /* 2749 */ 's', 'r', 'l', 9, 0,
  /* 2754 */ 's', 't', 'r', 'l', 9, 0,
  /* 2760 */ 'b', 'r', 'a', 's', 'l', 9, 0,
  /* 2767 */ 'i', 'p', 'm', 9, 0,
  /* 2772 */ 't', 'm', 9, 0,
  /* 2776 */ 'l', 'a', 'n', 9, 0,
  /* 2781 */ 'r', 'i', 's', 'b', 'g', 'n', 9, 0,
  /* 2789 */ 't', 'b', 'e', 'g', 'i', 'n', 9, 0,
  /* 2797 */ 'l', 'a', 'o', 9, 0,
  /* 2802 */ 'l', 'o', 'c', 'o', 9, 0,
  /* 2808 */ 's', 't', 'o', 'c', 'o', 9, 0,
  /* 2815 */ 'l', 'o', 'c', 'g', 'o', 9, 0,
  /* 2822 */ 's', 't', 'o', 'c', 'g', 'o', 9, 0,
  /* 2830 */ 'j', 'g', 'o', 9, 0,
  /* 2835 */ 'j', 'o', 9, 0,
  /* 2839 */ 'l', 'o', 'c', 'n', 'o', 9, 0,
  /* 2846 */ 's', 't', 'o', 'c', 'n', 'o', 9, 0,
  /* 2854 */ 'l', 'o', 'c', 'g', 'n', 'o', 9, 0,
  /* 2862 */ 's', 't', 'o', 'c', 'g', 'n', 'o', 9, 0,
  /* 2871 */ 'j', 'g', 'n', 'o', 9, 0,
  /* 2877 */ 'j', 'n', 'o', 9, 0,
  /* 2882 */ 'l', 'o', 'c', 'r', 'n', 'o', 9, 0,
  /* 2890 */ 'l', 'o', 'c', 'g', 'r', 'n', 'o', 9, 0,
  /* 2899 */ 'l', 'o', 'c', 'r', 'o', 9, 0,
  /* 2906 */ 'l', 'o', 'c', 'g', 'r', 'o', 9, 0,
  /* 2914 */ 'e', 'a', 'r', 9, 0,
  /* 2919 */ 'm', 'a', 'd', 'b', 'r', 9, 0,
  /* 2926 */ 'l', 'c', 'd', 'b', 'r', 9, 0,
  /* 2933 */ 'd', 'd', 'b', 'r', 9, 0,
  /* 2939 */ 'l', 'e', 'd', 'b', 'r', 9, 0,
  /* 2946 */ 'c', 'f', 'd', 'b', 'r', 9, 0,
  /* 2953 */ 'c', 'l', 'f', 'd', 'b', 'r', 9, 0,
  /* 2961 */ 'c', 'g', 'd', 'b', 'r', 9, 0,
  /* 2968 */ 'c', 'l', 'g', 'd', 'b', 'r', 9, 0,
  /* 2976 */ 'f', 'i', 'd', 'b', 'r', 9, 0,
  /* 2983 */ 'm', 'd', 'b', 'r', 9, 0,
  /* 2989 */ 'l', 'n', 'd', 'b', 'r', 9, 0,
  /* 2996 */ 'l', 'p', 'd', 'b', 'r', 9, 0,
  /* 3003 */ 's', 'q', 'd', 'b', 'r', 9, 0,
  /* 3010 */ 'm', 's', 'd', 'b', 'r', 9, 0,
  /* 3017 */ 'l', 't', 'd', 'b', 'r', 9, 0,
  /* 3024 */ 'l', 'x', 'd', 'b', 'r', 9, 0,
  /* 3031 */ 'm', 'x', 'd', 'b', 'r', 9, 0,
  /* 3038 */ 'm', 'a', 'e', 'b', 'r', 9, 0,
  /* 3045 */ 'l', 'c', 'e', 'b', 'r', 9, 0,
  /* 3052 */ 'l', 'd', 'e', 'b', 'r', 9, 0,
  /* 3059 */ 'm', 'd', 'e', 'b', 'r', 9, 0,
  /* 3066 */ 'm', 'e', 'e', 'b', 'r', 9, 0,
  /* 3073 */ 'c', 'f', 'e', 'b', 'r', 9, 0,
  /* 3080 */ 'c', 'l', 'f', 'e', 'b', 'r', 9, 0,
  /* 3088 */ 'c', 'g', 'e', 'b', 'r', 9, 0,
  /* 3095 */ 'c', 'l', 'g', 'e', 'b', 'r', 9, 0,
  /* 3103 */ 'f', 'i', 'e', 'b', 'r', 9, 0,
  /* 3110 */ 'l', 'n', 'e', 'b', 'r', 9, 0,
  /* 3117 */ 'l', 'p', 'e', 'b', 'r', 9, 0,
  /* 3124 */ 's', 'q', 'e', 'b', 'r', 9, 0,
  /* 3131 */ 'm', 's', 'e', 'b', 'r', 9, 0,
  /* 3138 */ 'l', 't', 'e', 'b', 'r', 9, 0,
  /* 3145 */ 'l', 'x', 'e', 'b', 'r', 9, 0,
  /* 3152 */ 'c', 'd', 'f', 'b', 'r', 9, 0,
  /* 3159 */ 'c', 'e', 'f', 'b', 'r', 9, 0,
  /* 3166 */ 'c', 'd', 'l', 'f', 'b', 'r', 9, 0,
  /* 3174 */ 'c', 'e', 'l', 'f', 'b', 'r', 9, 0,
  /* 3182 */ 'c', 'x', 'l', 'f', 'b', 'r', 9, 0,
  /* 3190 */ 'c', 'x', 'f', 'b', 'r', 9, 0,
  /* 3197 */ 'c', 'd', 'g', 'b', 'r', 9, 0,
  /* 3204 */ 'c', 'e', 'g', 'b', 'r', 9, 0,
  /* 3211 */ 'c', 'd', 'l', 'g', 'b', 'r', 9, 0,
  /* 3219 */ 'c', 'e', 'l', 'g', 'b', 'r', 9, 0,
  /* 3227 */ 'c', 'x', 'l', 'g', 'b', 'r', 9, 0,
  /* 3235 */ 'c', 'x', 'g', 'b', 'r', 9, 0,
  /* 3242 */ 's', 'l', 'b', 'r', 9, 0,
  /* 3248 */ 'a', 'x', 'b', 'r', 9, 0,
  /* 3254 */ 'l', 'c', 'x', 'b', 'r', 9, 0,
  /* 3261 */ 'l', 'd', 'x', 'b', 'r', 9, 0,
  /* 3268 */ 'l', 'e', 'x', 'b', 'r', 9, 0,
  /* 3275 */ 'c', 'f', 'x', 'b', 'r', 9, 0,
  /* 3282 */ 'c', 'l', 'f', 'x', 'b', 'r', 9, 0,
  /* 3290 */ 'c', 'g', 'x', 'b', 'r', 9, 0,
  /* 3297 */ 'c', 'l', 'g', 'x', 'b', 'r', 9, 0,
  /* 3305 */ 'f', 'i', 'x', 'b', 'r', 9, 0,
  /* 3312 */ 'm', 'x', 'b', 'r', 9, 0,
  /* 3318 */ 'l', 'n', 'x', 'b', 'r', 9, 0,
  /* 3325 */ 'l', 'p', 'x', 'b', 'r', 9, 0,
  /* 3332 */ 's', 'q', 'x', 'b', 'r', 9, 0,
  /* 3339 */ 's', 'x', 'b', 'r', 9, 0,
  /* 3345 */ 'l', 't', 'x', 'b', 'r', 9, 0,
  /* 3352 */ 'b', 'c', 'r', 9, 0,
  /* 3357 */ 'l', 'l', 'g', 'c', 'r', 9, 0,
  /* 3364 */ 'a', 'l', 'c', 'r', 9, 0,
  /* 3370 */ 'l', 'l', 'c', 'r', 9, 0,
  /* 3376 */ 'l', 'o', 'c', 'r', 9, 0,
  /* 3382 */ 'l', 'g', 'd', 'r', 9, 0,
  /* 3388 */ 'l', 'd', 'r', 9, 0,
  /* 3393 */ 'c', 'p', 's', 'd', 'r', 9, 0,
  /* 3400 */ 'l', 'z', 'd', 'r', 9, 0,
  /* 3406 */ 'b', 'e', 'r', 9, 0,
  /* 3411 */ 'b', 'h', 'e', 'r', 9, 0,
  /* 3417 */ 'b', 'n', 'h', 'e', 'r', 9, 0,
  /* 3424 */ 'b', 'l', 'e', 'r', 9, 0,
  /* 3430 */ 'b', 'n', 'l', 'e', 'r', 9, 0,
  /* 3437 */ 'b', 'n', 'e', 'r', 9, 0,
  /* 3443 */ 'l', 'z', 'e', 'r', 9, 0,
  /* 3449 */ 'a', 'g', 'f', 'r', 9, 0,
  /* 3455 */ 'l', 'c', 'g', 'f', 'r', 9, 0,
  /* 3462 */ 'a', 'l', 'g', 'f', 'r', 9, 0,
  /* 3469 */ 'c', 'l', 'g', 'f', 'r', 9, 0,
  /* 3476 */ 'l', 'l', 'g', 'f', 'r', 9, 0,
  /* 3483 */ 's', 'l', 'g', 'f', 'r', 9, 0,
  /* 3490 */ 'l', 'n', 'g', 'f', 'r', 9, 0,
  /* 3497 */ 'l', 'p', 'g', 'f', 'r', 9, 0,
  /* 3504 */ 'd', 's', 'g', 'f', 'r', 9, 0,
  /* 3511 */ 'm', 's', 'g', 'f', 'r', 9, 0,
  /* 3518 */ 'l', 't', 'g', 'f', 'r', 9, 0,
  /* 3525 */ 'a', 'g', 'r', 9, 0,
  /* 3530 */ 's', 'l', 'b', 'g', 'r', 9, 0,
  /* 3537 */ 'a', 'l', 'c', 'g', 'r', 9, 0,
  /* 3544 */ 'l', 'o', 'c', 'g', 'r', 9, 0,
  /* 3551 */ 'l', 'd', 'g', 'r', 9, 0,
  /* 3557 */ 'a', 'l', 'g', 'r', 9, 0,
  /* 3563 */ 'c', 'l', 'g', 'r', 9, 0,
  /* 3569 */ 'd', 'l', 'g', 'r', 9, 0,
  /* 3575 */ 'm', 'l', 'g', 'r', 9, 0,
  /* 3581 */ 's', 'l', 'g', 'r', 9, 0,
  /* 3587 */ 'l', 'n', 'g', 'r', 9, 0,
  /* 3593 */ 'f', 'l', 'o', 'g', 'r', 9, 0,
  /* 3600 */ 'l', 'p', 'g', 'r', 9, 0,
  /* 3606 */ 'd', 's', 'g', 'r', 9, 0,
  /* 3612 */ 'm', 's', 'g', 'r', 9, 0,
  /* 3618 */ 'l', 't', 'g', 'r', 9, 0,
  /* 3624 */ 'l', 'r', 'v', 'g', 'r', 9, 0,
  /* 3631 */ 'x', 'g', 'r', 9, 0,
  /* 3636 */ 'b', 'h', 'r', 9, 0,
  /* 3641 */ 'l', 'l', 'g', 'h', 'r', 9, 0,
  /* 3648 */ 'b', 'l', 'h', 'r', 9, 0,
  /* 3654 */ 'l', 'l', 'h', 'r', 9, 0,
  /* 3660 */ 'b', 'n', 'l', 'h', 'r', 9, 0,
  /* 3667 */ 'b', 'n', 'h', 'r', 9, 0,
  /* 3673 */ 'a', 'l', 'r', 9, 0,
  /* 3678 */ 'b', 'l', 'r', 9, 0,
  /* 3683 */ 'c', 'l', 'r', 9, 0,
  /* 3688 */ 'd', 'l', 'r', 9, 0,
  /* 3693 */ 'b', 'n', 'l', 'r', 9, 0,
  /* 3699 */ 's', 'l', 'r', 9, 0,
  /* 3704 */ 'l', 'n', 'r', 9, 0,
  /* 3709 */ 'b', 'o', 'r', 9, 0,
  /* 3714 */ 'b', 'n', 'o', 'r', 9, 0,
  /* 3720 */ 'l', 'p', 'r', 9, 0,
  /* 3725 */ 'b', 'a', 's', 'r', 9, 0,
  /* 3731 */ 'm', 's', 'r', 9, 0,
  /* 3736 */ 'l', 't', 'r', 9, 0,
  /* 3741 */ 'l', 'r', 'v', 'r', 9, 0,
  /* 3747 */ 'l', 'x', 'r', 9, 0,
  /* 3752 */ 'l', 'z', 'x', 'r', 9, 0,
  /* 3758 */ 'b', 'r', 'a', 's', 9, 0,
  /* 3764 */ 'c', 's', 9, 0,
  /* 3768 */ 'm', 's', 9, 0,
  /* 3772 */ 'b', 'r', 'c', 't', 9, 0,
  /* 3778 */ 'l', 't', 9, 0,
  /* 3782 */ 'p', 'o', 'p', 'c', 'n', 't', 9, 0,
  /* 3790 */ 't', 'a', 'b', 'o', 'r', 't', 9, 0,
  /* 3798 */ 'c', 'l', 's', 't', 9, 0,
  /* 3804 */ 's', 'r', 's', 't', 9, 0,
  /* 3810 */ 'm', 'v', 's', 't', 9, 0,
  /* 3816 */ 'l', 'r', 'v', 9, 0,
  /* 3821 */ 's', 't', 'r', 'v', 9, 0,
  /* 3827 */ 'l', 'a', 'x', 9, 0,
  /* 3832 */ 'l', 'a', 'y', 9, 0,
  /* 3837 */ 'i', 'c', 'y', 9, 0,
  /* 3842 */ 's', 't', 'c', 'y', 9, 0,
  /* 3848 */ 'l', 'd', 'y', 9, 0,
  /* 3853 */ 's', 't', 'd', 'y', 9, 0,
  /* 3859 */ 'l', 'e', 'y', 9, 0,
  /* 3864 */ 's', 't', 'e', 'y', 9, 0,
  /* 3870 */ 'a', 'h', 'y', 9, 0,
  /* 3875 */ 'c', 'h', 'y', 9, 0,
  /* 3880 */ 'l', 'h', 'y', 9, 0,
  /* 3885 */ 'm', 'h', 'y', 9, 0,
  /* 3890 */ 's', 'h', 'y', 9, 0,
  /* 3895 */ 's', 't', 'h', 'y', 9, 0,
  /* 3901 */ 'c', 'l', 'i', 'y', 9, 0,
  /* 3907 */ 'n', 'i', 'y', 9, 0,
  /* 3912 */ 'o', 'i', 'y', 9, 0,
  /* 3917 */ 'm', 'v', 'i', 'y', 9, 0,
  /* 3923 */ 'x', 'i', 'y', 9, 0,
  /* 3928 */ 'a', 'l', 'y', 9, 0,
  /* 3933 */ 'c', 'l', 'y', 9, 0,
  /* 3938 */ 's', 'l', 'y', 9, 0,
  /* 3943 */ 't', 'm', 'y', 9, 0,
  /* 3948 */ 'n', 'y', 9, 0,
  /* 3952 */ 'o', 'y', 9, 0,
  /* 3956 */ 'c', 's', 'y', 9, 0,
  /* 3961 */ 'm', 's', 'y', 9, 0,
  /* 3966 */ 's', 't', 'y', 9, 0,
  /* 3971 */ 'x', 'y', 9, 0,
  /* 3975 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 3988 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 3995 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 4005 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 4020 */ 'l', 'o', 'c', 0,
  /* 4024 */ 's', 't', 'o', 'c', 0,
  /* 4029 */ 't', 'e', 'n', 'd', 0,
  /* 4034 */ 'l', 'o', 'c', 'g', 0,
  /* 4039 */ 's', 't', 'o', 'c', 'g', 0,
  /* 4045 */ 'j', 'g', 0,
  /* 4048 */ 'c', 'i', 'j', 0,
  /* 4052 */ 'c', 'g', 'i', 'j', 0,
  /* 4057 */ 'c', 'l', 'g', 'i', 'j', 0,
  /* 4063 */ 'c', 'l', 'i', 'j', 0,
  /* 4068 */ 'c', 'r', 'j', 0,
  /* 4072 */ 'c', 'g', 'r', 'j', 0,
  /* 4077 */ 'c', 'l', 'g', 'r', 'j', 0,
  /* 4083 */ 'c', 'l', 'r', 'j', 0,
  /* 4088 */ 'l', 'o', 'c', 'r', 0,
  /* 4093 */ 'l', 'o', 'c', 'g', 'r', 0,
  };

  O << "\t";

  // Emit the opcode for the instruction.
  uint32_t Bits = OpInfo[MI->getOpcode()];
  assert(Bits != 0 && "Cannot print this instruction.");
  O << AsmStrs+(Bits & 4095)-1;


  // Fragment 0 encoded into 4 bits for 11 unique commands.
  switch ((Bits >> 12) & 15) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // DBG_VALUE, BUNDLE, LIFETIME_START, LIFETIME_END, TEND
    return;
    break;
  case 1:
    // A, ADB, ADBR, AEB, AEBR, AFI, AG, AGF, AGFI, AGFR, AGHI, AGHIK, AGR, A...
    printOperand(MI, 0, O); 
    break;
  case 2:
    // AGSI, ASI, CGHSI, CHHSI, CHSI, CLFHSI, CLGHSI, CLHHSI, CLI, CLIY, MVGH...
    printBDAddrOperand(MI, 0, O); 
    break;
  case 3:
    // AsmBCR, AsmBRC, AsmBRCL, PFD, PFDRL
    printU4ImmOperand(MI, 0, O); 
    O << ", "; 
    break;
  case 4:
    // AsmEJ, AsmEJG, AsmHEJ, AsmHEJG, AsmHJ, AsmHJG, AsmLEJ, AsmLEJG, AsmLHJ...
    printPCRelOperand(MI, 0, O); 
    return;
    break;
  case 5:
    // BRC, BRCL
    printCond4Operand(MI, 1, O); 
    O << "\t"; 
    printPCRelOperand(MI, 2, O); 
    return;
    break;
  case 6:
    // CGIJ, CGRJ, CIJ, CLGIJ, CLGRJ, CLIJ, CLRJ, CRJ
    printCond4Operand(MI, 2, O); 
    O << "\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    break;
  case 7:
    // CLC, MVC, NC, OC, XC
    printBDLAddrOperand(MI, 0, O); 
    O << ", "; 
    printBDAddrOperand(MI, 3, O); 
    return;
    break;
  case 8:
    // LOC, LOCG
    printCond4Operand(MI, 5, O); 
    O << "\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printBDAddrOperand(MI, 2, O); 
    return;
    break;
  case 9:
    // LOCGR, LOCR
    printCond4Operand(MI, 3, O); 
    O << "\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    return;
    break;
  case 10:
    // STOC, STOCG
    printCond4Operand(MI, 4, O); 
    O << "\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printBDAddrOperand(MI, 1, O); 
    return;
    break;
  }


  // Fragment 1 encoded into 3 bits for 7 unique commands.
  switch ((Bits >> 16) & 7) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // A, ADB, ADBR, AEB, AEBR, AFI, AG, AGF, AGFI, AGFR, AGHI, AGHIK, AGR, A...
    O << ", "; 
    break;
  case 1:
    // AsmBCR, CGRJ, CLGRJ, CLRJ, CRJ
    printOperand(MI, 1, O); 
    break;
  case 2:
    // AsmBRC, AsmBRCL, PFDRL
    printPCRelOperand(MI, 1, O); 
    return;
    break;
  case 3:
    // AsmEBR, AsmHBR, AsmHEBR, AsmLBR, AsmLEBR, AsmLHBR, AsmNEBR, AsmNHBR, A...
    return;
    break;
  case 4:
    // CGIJ, CIJ
    printS8ImmOperand(MI, 1, O); 
    O << ", "; 
    printPCRelOperand(MI, 3, O); 
    return;
    break;
  case 5:
    // CLGIJ, CLIJ
    printU8ImmOperand(MI, 1, O); 
    O << ", "; 
    printPCRelOperand(MI, 3, O); 
    return;
    break;
  case 6:
    // PFD
    printBDXAddrOperand(MI, 1, O); 
    return;
    break;
  }


  // Fragment 2 encoded into 5 bits for 25 unique commands.
  switch ((Bits >> 19) & 31) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // A, ADB, AEB, AG, AGF, AH, AHY, AL, ALC, ALCG, ALG, ALGF, ALY, AY, DDB,...
    printBDXAddrOperand(MI, 2, O); 
    return;
    break;
  case 1:
    // ADBR, AEBR, AGFR, AGR, ALCGR, ALCR, ALGFR, ALGR, ALR, AR, AXBR, AsmELO...
    printOperand(MI, 2, O); 
    break;
  case 2:
    // AFI, AGFI, AIH, MSFI, MSGFI
    printS32ImmOperand(MI, 2, O); 
    return;
    break;
  case 3:
    // AGHI, AHI, CGHSI, CHHSI, CHSI, MGHI, MHI, MVGHI, MVHHI, MVHI
    printS16ImmOperand(MI, 2, O); 
    return;
    break;
  case 4:
    // AGHIK, AGRK, AHIK, ALGHSIK, ALGRK, ALHSIK, ALRK, ARK, AsmCGRJ, AsmCLGR...
    printOperand(MI, 1, O); 
    break;
  case 5:
    // AGSI, ASI
    printS8ImmOperand(MI, 2, O); 
    return;
    break;
  case 6:
    // ALFI, ALGFI, NIHF, NILF, OIHF, OILF, SLFI, SLGFI, XIHF, XILF
    printU32ImmOperand(MI, 2, O); 
    return;
    break;
  case 7:
    // AsmBCR
    return;
    break;
  case 8:
    // AsmCGIJ, AsmCIJ, AsmJEAltCGI, AsmJEAltCI, AsmJECGI, AsmJECI, AsmJHAltC...
    printS8ImmOperand(MI, 1, O); 
    O << ", "; 
    break;
  case 9:
    // AsmCLGIJ, AsmCLIJ, AsmJEAltCLGI, AsmJEAltCLI, AsmJECLGI, AsmJECLI, Asm...
    printU8ImmOperand(MI, 1, O); 
    O << ", "; 
    break;
  case 10:
    // AsmELOC, AsmELOCG, AsmHELOC, AsmHELOCG, AsmHLOC, AsmHLOCG, AsmLELOC, A...
    printBDAddrOperand(MI, 2, O); 
    break;
  case 11:
    // AsmESTOC, AsmESTOCG, AsmHESTOC, AsmHESTOCG, AsmHSTOC, AsmHSTOCG, AsmLE...
    printBDAddrOperand(MI, 1, O); 
    break;
  case 12:
    // BRAS, BRASL
    printPCRelTLSOperand(MI, 1, O); 
    return;
    break;
  case 13:
    // BRCT, BRCTG
    printPCRelOperand(MI, 2, O); 
    return;
    break;
  case 14:
    // C, CDB, CEB, CG, CGF, CGH, CH, CHF, CHY, CL, CLG, CLGF, CLHF, CLY, CY,...
    printBDXAddrOperand(MI, 1, O); 
    return;
    break;
  case 15:
    // CDLFBR, CDLGBR, CELFBR, CELGBR, CFDBR, CFEBR, CFXBR, CGDBR, CGEBR, CGX...
    printU4ImmOperand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 2, O); 
    break;
  case 16:
    // CFI, CGFI, CIH, LGFI
    printS32ImmOperand(MI, 1, O); 
    return;
    break;
  case 17:
    // CGFRL, CGHRL, CGRL, CHRL, CLGFRL, CLGHRL, CLGRL, CLHRL, CLRL, CRL, LAR...
    printPCRelOperand(MI, 1, O); 
    return;
    break;
  case 18:
    // CGHI, CHI, LGHI, LHI
    printS16ImmOperand(MI, 1, O); 
    return;
    break;
  case 19:
    // CGRJ, CLGRJ, CLRJ, CRJ
    O << ", "; 
    printPCRelOperand(MI, 3, O); 
    return;
    break;
  case 20:
    // CLFHSI, CLGHSI, CLHHSI, IIHH, IIHL, IILH, IILL, NIHH, NIHL, NILH, NILL...
    printU16ImmOperand(MI, 2, O); 
    return;
    break;
  case 21:
    // CLFI, CLGFI, CLIH, IIHF, IILF, LLIHF, LLILF
    printU32ImmOperand(MI, 1, O); 
    return;
    break;
  case 22:
    // CLI, CLIY, MVI, MVIY, NI, NIY, OI, OIY, TM, TMY, XI, XIY
    printU8ImmOperand(MI, 2, O); 
    return;
    break;
  case 23:
    // EAR
    printAccessRegOperand(MI, 1, O); 
    return;
    break;
  case 24:
    // LLIHH, LLIHL, LLILH, LLILL, TMHH, TMHL, TMLH, TMLL
    printU16ImmOperand(MI, 1, O); 
    return;
    break;
  }


  // Fragment 3 encoded into 2 bits for 4 unique commands.
  switch ((Bits >> 24) & 3) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ADBR, AEBR, AGFR, AGR, ALCGR, ALCR, ALGFR, ALGR, ALR, AR, AXBR, AsmELO...
    return;
    break;
  case 1:
    // AGHIK, AGRK, AHIK, ALGHSIK, ALGRK, ALHSIK, ALRK, ARK, AsmCGRJ, AsmCLGR...
    O << ", "; 
    break;
  case 2:
    // AsmCGIJ, AsmCIJ, AsmCLGIJ, AsmCLIJ
    printU4ImmOperand(MI, 2, O); 
    O << ", "; 
    printPCRelOperand(MI, 3, O); 
    return;
    break;
  case 3:
    // AsmJEAltCGI, AsmJEAltCI, AsmJEAltCLGI, AsmJEAltCLI, AsmJECGI, AsmJECI,...
    printPCRelOperand(MI, 2, O); 
    return;
    break;
  }


  // Fragment 4 encoded into 4 bits for 11 unique commands.
  switch ((Bits >> 26) & 15) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // AGHIK, AHIK, ALGHSIK, ALHSIK
    printS16ImmOperand(MI, 2, O); 
    return;
    break;
  case 1:
    // AGRK, ALGRK, ALRK, ARK, CPSDRdd, CPSDRds, CPSDRsd, CPSDRss, NGRK, NRK,...
    printOperand(MI, 2, O); 
    return;
    break;
  case 2:
    // AsmCGRJ, AsmCLGRJ, AsmCLRJ, AsmCRJ, PPA
    printU4ImmOperand(MI, 2, O); 
    break;
  case 3:
    // AsmJEAltCGR, AsmJEAltCLGR, AsmJEAltCLR, AsmJEAltCR, AsmJECGR, AsmJECLG...
    printPCRelOperand(MI, 2, O); 
    return;
    break;
  case 4:
    // AsmLOC, AsmLOCG
    printU4ImmOperand(MI, 4, O); 
    return;
    break;
  case 5:
    // AsmLOCGR, AsmLOCR, AsmSTOC, AsmSTOCG, CDLFBR, CDLGBR, CELFBR, CELGBR, ...
    printU4ImmOperand(MI, 3, O); 
    return;
    break;
  case 6:
    // CS, CSG, CSY
    printBDAddrOperand(MI, 3, O); 
    return;
    break;
  case 7:
    // LAA, LAAG, LAAL, LAALG, LAN, LANG, LAO, LAOG, LAX, LAXG, LMG, RLL, RLL...
    printBDAddrOperand(MI, 2, O); 
    return;
    break;
  case 8:
    // MADB, MAEB, MSDB, MSEB
    printBDXAddrOperand(MI, 3, O); 
    return;
    break;
  case 9:
    // MADBR, MAEBR, MSDBR, MSEBR
    printOperand(MI, 3, O); 
    return;
    break;
  case 10:
    // RISBG, RISBG32, RISBGN, RISBHG, RISBLG, RNSBG, ROSBG, RXSBG
    printU8ImmOperand(MI, 3, O); 
    O << ", "; 
    printU8ImmOperand(MI, 4, O); 
    O << ", "; 
    printU6ImmOperand(MI, 5, O); 
    return;
    break;
  }


  // Fragment 5 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 30) & 1) {
    // PPA
    return;
  } else {
    // AsmCGRJ, AsmCLGRJ, AsmCLRJ, AsmCRJ
    O << ", "; 
    printPCRelOperand(MI, 3, O); 
    return;
  }

}


/// getRegisterName - This method is automatically generated by tblgen
/// from the register set description.  This returns the assembler name
/// for the specified register.
const char *SystemZInstPrinter::getRegisterName(unsigned RegNo) {
  assert(RegNo && RegNo < 98 && "Invalid register number!");

  static const char AsmStrs[] = {
  /* 0 */ 'f', '1', '0', 0,
  /* 4 */ 'r', '1', '0', 0,
  /* 8 */ 'f', '0', 0,
  /* 11 */ 'r', '0', 0,
  /* 14 */ 'f', '1', '1', 0,
  /* 18 */ 'r', '1', '1', 0,
  /* 22 */ 'f', '1', 0,
  /* 25 */ 'r', '1', 0,
  /* 28 */ 'f', '1', '2', 0,
  /* 32 */ 'r', '1', '2', 0,
  /* 36 */ 'f', '2', 0,
  /* 39 */ 'r', '2', 0,
  /* 42 */ 'f', '1', '3', 0,
  /* 46 */ 'r', '1', '3', 0,
  /* 50 */ 'f', '3', 0,
  /* 53 */ 'r', '3', 0,
  /* 56 */ 'f', '1', '4', 0,
  /* 60 */ 'r', '1', '4', 0,
  /* 64 */ 'f', '4', 0,
  /* 67 */ 'r', '4', 0,
  /* 70 */ 'f', '1', '5', 0,
  /* 74 */ 'r', '1', '5', 0,
  /* 78 */ 'f', '5', 0,
  /* 81 */ 'r', '5', 0,
  /* 84 */ 'f', '6', 0,
  /* 87 */ 'r', '6', 0,
  /* 90 */ 'f', '7', 0,
  /* 93 */ 'r', '7', 0,
  /* 96 */ 'f', '8', 0,
  /* 99 */ 'r', '8', 0,
  /* 102 */ 'f', '9', 0,
  /* 105 */ 'r', '9', 0,
  /* 108 */ 'c', 'c', 0,
  };

  static const uint8_t RegAsmOffset[] = {
    108, 8, 22, 36, 50, 64, 78, 84, 90, 96, 102, 0, 14, 28, 
    42, 56, 70, 8, 22, 64, 78, 96, 102, 28, 42, 8, 22, 36, 
    50, 64, 78, 84, 90, 96, 102, 0, 14, 28, 42, 56, 70, 11, 
    25, 39, 53, 67, 81, 87, 93, 99, 105, 4, 18, 32, 46, 60, 
    74, 11, 25, 39, 53, 67, 81, 87, 93, 99, 105, 4, 18, 32, 
    46, 60, 74, 11, 25, 39, 53, 67, 81, 87, 93, 99, 105, 4, 
    18, 32, 46, 60, 74, 11, 39, 67, 87, 99, 4, 32, 60, 
  };

  assert (*(AsmStrs+RegAsmOffset[RegNo-1]) &&
          "Invalid alt name index for register!");
  return AsmStrs+RegAsmOffset[RegNo-1];
}

#ifdef PRINT_ALIAS_INSTR
#undef PRINT_ALIAS_INSTR

bool SystemZInstPrinter::printAliasInstr(const MCInst *MI, raw_ostream &OS) {
  return false;
}

#endif // PRINT_ALIAS_INSTR
